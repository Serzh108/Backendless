{"version":3,"sources":["components/Button/Button.module.css","components/Device/Device.module.css","components/Button/Button.js","helpers/constants/constants.js","helpers/calc.js","components/Device/Device.js","App.js","index.js"],"names":["module","exports","Button","value","clickHandler","id","className","styles","btn","onClick","path","mdiBackspaceOutline","size","horizontal","vertical","rotate","color","KEY_ARRAY","ACTIONS","action","a","b","priority","makeOperation","type","actionArr","digitArr","multiplay","indexOf","tempResult","splice","testZeroDivision","includes","index_0","SyntaxError","calc","data","dataString","join","length","parsedDigit","Number","parseFloat","isNaN","push","digitToString","toString","digitLength","substring","firstOperation","nextOperation","currentOperation","newProcessing","initialState","Device","useState","state","setState","result","setResult","isResult","setIsResult","keyboardHandler","e","currentKey","key","symbolHandler","useEffect","document","addEventListener","removeEventListener","currentSymbol","currentTarget","newValue","res","error","alert","message","undefined","ress","prev","container","screen","firstLine","secondLine","keyboard","map","item","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.497b2a66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1-Bn6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Device_container__GbXmR\",\"screen\":\"Device_screen__AL8UP\",\"firstLine\":\"Device_firstLine__3ADMh\",\"secondLine\":\"Device_secondLine__2vjOu\",\"keyboard\":\"Device_keyboard__3AtNb\"};","import React from 'react';\r\nimport Icon from '@mdi/react';\r\nimport { mdiBackspaceOutline } from '@mdi/js';\r\nimport styles from './Button.module.css';\r\n\r\nfunction Button({ value, clickHandler }) {\r\n  return (\r\n    <div id={value} className={styles.btn} onClick={clickHandler}>\r\n      <p>\r\n        {value !== 'x' ? (\r\n          value\r\n        ) : (\r\n          <Icon\r\n            path={mdiBackspaceOutline}\r\n            size={1}\r\n            horizontal\r\n            vertical\r\n            rotate={180}\r\n            color=\"#333\"\r\n          />\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","const KEY_ARRAY = [\r\n  'AC',\r\n  'x',\r\n  '%',\r\n  '/',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  '*',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '-',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '+',\r\n  '.',\r\n  '0',\r\n  '=',\r\n];\r\n\r\nconst multiplayAction = (a, b) => a * b;\r\nconst divisionAction = (a, b) => a / b;\r\nconst additionAction = (a, b) => a + b;\r\nconst subtractionAction = (a, b) => a - b;\r\n\r\nconst ACTIONS = {\r\n  '*': { action: multiplayAction, priority: 2 },\r\n  '/': { action: divisionAction, priority: 2 },\r\n  '+': { action: additionAction, priority: 1 },\r\n  '-': { action: subtractionAction, priority: 1 },\r\n};\r\n\r\nexport { KEY_ARRAY, ACTIONS };\r\n","import { ACTIONS } from './constants/constants';\r\n\r\nconst makeOperation = (type, actionArr, digitArr) => {\r\n  let multiplay = actionArr.indexOf(type);\r\n  const tempResult = ACTIONS[type].action(\r\n    digitArr[multiplay],\r\n    digitArr[multiplay + 1],\r\n  );\r\n  digitArr.splice(multiplay, 2, tempResult);\r\n  actionArr.splice(multiplay, 1);\r\n};\r\n\r\nconst newProcessing = (actionArr, digitArr) => {\r\n  while (actionArr.length > 0) {\r\n    const firstOperation = actionArr[0];\r\n    let nextOperation = actionArr[1];\r\n    if (!nextOperation) {\r\n      nextOperation = firstOperation;\r\n    }\r\n\r\n    const currentOperation =\r\n      ACTIONS[firstOperation].priority >= ACTIONS[nextOperation].priority\r\n        ? firstOperation\r\n        : nextOperation;\r\n\r\n    makeOperation(currentOperation, actionArr, digitArr);\r\n  }\r\n};\r\n\r\nconst testZeroDivision = (digitArr, actionArr) => {\r\n  if (digitArr.includes(0)) {\r\n    const index_0 = digitArr.indexOf(0);\r\n    if (actionArr[index_0 - 1] === '/') {\r\n      throw SyntaxError(`Devision by 0! (operation â„– ${index_0})`);\r\n    }\r\n  }\r\n};\r\n\r\nconst calc = data => {\r\n  const digitArr = [];\r\n  const actionArr = [];\r\n  let dataString = data.join('');\r\n  while (dataString.length > 0) {\r\n    // const parsedDigit = Number.parseInt(dataString, 10);\r\n    const parsedDigit = Number.parseFloat(dataString);\r\n\r\n    if (!isNaN(parsedDigit)) {\r\n      digitArr.push(parsedDigit);\r\n    } else {\r\n      return;\r\n    }\r\n    const digitToString = parsedDigit.toString();\r\n    const digitLength =\r\n      parsedDigit === 0 && dataString[0] === '-'\r\n        ? digitToString.length + 1\r\n        : digitToString.length;\r\n\r\n    if (dataString[digitLength] === '-') {\r\n      actionArr.push('+');\r\n      dataString = dataString.substring(digitLength);\r\n    } else {\r\n      dataString[digitLength] && actionArr.push(dataString[digitLength]);\r\n      dataString = dataString.substring(digitLength + 1);\r\n    }\r\n\r\n    testZeroDivision(digitArr, actionArr);\r\n  }\r\n\r\n  newProcessing(actionArr, digitArr);\r\n\r\n  return digitArr[0];\r\n};\r\n\r\nexport default calc;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '../Button/Button';\r\nimport calc from '../../helpers/calc';\r\nimport { KEY_ARRAY } from '../../helpers/constants/constants';\r\nimport styles from './Device.module.css';\r\n\r\nconst initialState = [];\r\nconst initialResult = 0;\r\n\r\nfunction Device() {\r\n  const [state, setState] = useState(initialState);\r\n  const [result, setResult] = useState(initialResult);\r\n  const [isResult, setIsResult] = useState(false);\r\n\r\n  const keyboardHandler = e => {\r\n    const currentKey = e.key;\r\n    if (KEY_ARRAY.includes(currentKey)) {\r\n      symbolHandler(currentKey);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keypress', keyboardHandler);\r\n    return () => {\r\n      document.removeEventListener('keypress', keyboardHandler);\r\n    };\r\n  }, [keyboardHandler]);\r\n\r\n  const clickHandler = e => {\r\n    const currentSymbol = e.currentTarget.id;\r\n    symbolHandler(currentSymbol);\r\n  };\r\n\r\n  const symbolHandler = currentSymbol => {\r\n    if (isNaN(currentSymbol)) {\r\n      if (state.includes('ERROR')) {\r\n        setState(initialState);\r\n        setResult(initialResult);\r\n        setIsResult(false);\r\n        return;\r\n      }\r\n      setIsResult(false);\r\n\r\n      switch (currentSymbol) {\r\n        // case '.':\r\n        case '%':\r\n          return;\r\n\r\n        case 'x':\r\n          const newValue = [...state];\r\n          newValue.length = newValue.length - 1;\r\n          setState(state.includes('ERROR') ? [] : newValue);\r\n          return;\r\n\r\n        case 'AC':\r\n          setState(initialState);\r\n          setResult(initialResult);\r\n          setIsResult(false);\r\n          return;\r\n\r\n        case '=':\r\n          if (isNaN(state[state.length - 1])) return;\r\n\r\n          let res;\r\n          try {\r\n            res = calc(state);\r\n          } catch (error) {\r\n            alert(error.message);\r\n          }\r\n          res = res === undefined ? 'ERROR' : res;\r\n\r\n          setState([`${res}`]);\r\n          setResult(initialResult);\r\n          setIsResult(true);\r\n          return;\r\n\r\n        default:\r\n          break;\r\n      }\r\n      // ------------- Calculate ----------\r\n      let ress;\r\n      try {\r\n        ress = calc(state);\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n      ress === undefined ? setResult('ERROR') : setResult(ress);\r\n      // ------------- /Calculate ----------\r\n\r\n      // --- set first item if it is '-' ---\r\n      if (state.length === 0 && !isResult) {\r\n        currentSymbol === '-' && setState([currentSymbol]);\r\n        return;\r\n      }\r\n      // --- /set first item if it is '-' ---\r\n      // --- exit if first symbol is '-' ---\r\n      if (state.length === 1 && state[0] === '-') {\r\n        return;\r\n      }\r\n      // --- /exit if first symbol is '-' ---\r\n      // --- replace last NaN symbol ---\r\n      if (isNaN(state[state.length - 1])) {\r\n        let newValue = [...state];\r\n        newValue[newValue.length - 1] = currentSymbol;\r\n        setState(newValue);\r\n        // --- /replace last NaN symbol ---\r\n      } else setState(prev => [...prev, currentSymbol]);\r\n    } else {\r\n      if (isResult) {\r\n        setIsResult(false);\r\n        setState([`${currentSymbol}`]);\r\n      } else {\r\n        setState(prev => [...prev, currentSymbol]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.screen}>\r\n        <p className={styles.firstLine}>{state.join('')}</p>\r\n        {!isResult && <p className={styles.secondLine}>{result}</p>}\r\n      </div>\r\n      <div className={styles.keyboard}>\r\n        {KEY_ARRAY.map(item => (\r\n          <Button key={item} value={item} clickHandler={clickHandler} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Device;\r\n","import React from 'react';\nimport Device from './components/Device/Device';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Device />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}