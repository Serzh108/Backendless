{"version":3,"sources":["components/Button/Button.module.css","components/Device/Device.module.css","components/Button/Button.js","helpers/constants/constants.js","helpers/calc.js","components/Device/Device.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","value","clickHandler","id","className","styles","btn","onClick","path","mdiBackspaceOutline","size","horizontal","vertical","rotate","color","KEY_ARRAY","ACTIONS_TYPE","ACTIONS","a","b","testZeroDivision","digitArr","actionArr","includes","index_0","indexOf","console","log","SyntaxError","calc","data","dataString","join","length","parsedDigit","Number","parseInt","push","digitToString","toString","digitLength","substring","forEach","type","multiplay","tempResult","splice","makeOperation","initialState","Device","useState","state","setState","result","setResult","isResult","setIsResult","keyboardHandler","e","currentKey","key","symbolHandler","useEffect","document","addEventListener","removeEventListener","currentSymbol","currentTarget","isNaN","ress","error","alert","message","undefined","newValue","res","prev","container","screen","firstLine","secondLine","keyboard","map","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e688cd1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1-Bn6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Device_container__GbXmR\",\"screen\":\"Device_screen__AL8UP\",\"firstLine\":\"Device_firstLine__3ADMh\",\"secondLine\":\"Device_secondLine__2vjOu\",\"keyboard\":\"Device_keyboard__3AtNb\"};","import React from 'react';\r\nimport Icon from '@mdi/react';\r\nimport { mdiBackspaceOutline } from '@mdi/js';\r\nimport styles from './Button.module.css';\r\n\r\nfunction Button({ value, clickHandler }) {\r\n  return (\r\n    <div id={value} className={styles.btn} onClick={clickHandler}>\r\n      <p>\r\n        {value !== 'x' ? (\r\n          value\r\n        ) : (\r\n          <Icon\r\n            path={mdiBackspaceOutline}\r\n            size={1}\r\n            horizontal\r\n            vertical\r\n            rotate={180}\r\n            color=\"#333\"\r\n          />\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","const KEY_ARRAY = [\r\n  'AC',\r\n  'x',\r\n  '%',\r\n  '/',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  '*',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '-',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '+',\r\n  '.',\r\n  '0',\r\n  '=',\r\n];\r\n\r\n// const ACTIONS_TYPE = ['*', '/', '+', '-'];\r\nconst ACTIONS_TYPE = ['*', '/', '+'];\r\n\r\nconst multiplayAction = (a, b) => a * b;\r\nconst divisionAction = (a, b) => a / b;\r\nconst additionAction = (a, b) => a + b;\r\n// const subtractionAction = (a, b) => a - b;\r\n\r\nconst ACTIONS = {\r\n  '*': multiplayAction,\r\n  '/': divisionAction,\r\n  '+': additionAction,\r\n  // '-': subtractionAction,\r\n};\r\n\r\nexport { KEY_ARRAY, ACTIONS_TYPE, ACTIONS };\r\n","import { ACTIONS_TYPE, ACTIONS } from './constants/constants';\r\n\r\nconst makeOperation = (type, actionArr, digitArr) => {\r\n  let multiplay = actionArr.indexOf(type);\r\n  while (multiplay >= 0) {\r\n    console.log(`${type} present!!! on: `, multiplay);\r\n    const tempResult = ACTIONS[type](\r\n      digitArr[multiplay],\r\n      digitArr[multiplay + 1],\r\n    );\r\n    console.log(`${type} tempResult : `, tempResult);\r\n    digitArr.splice(multiplay, 2, tempResult);\r\n    console.log('digitArr : ', digitArr);\r\n    // ------\r\n    actionArr.splice(multiplay, 1);\r\n    console.log(`${type} actionArr: `, actionArr);\r\n    multiplay = actionArr.indexOf(type);\r\n  }\r\n  console.log(`no ${type} action!!!`);\r\n};\r\n\r\nconst testZeroDivision = (digitArr, actionArr) => {\r\n  if (digitArr.includes(0)) {\r\n    const index_0 = digitArr.indexOf(0);\r\n    console.log(`AHTUNG!!!! -> 0 presents!!! at ${index_0}`);\r\n    if (actionArr[index_0 - 1] === '/') {\r\n      console.log(`ERROR!!!! -> /0 presents!!!`);\r\n      throw SyntaxError(`Devision by 0! (operation № ${index_0})`);\r\n    }\r\n  }\r\n};\r\n\r\nconst calc = data => {\r\n  console.log('calc:', data);\r\n  const digitArr = [];\r\n  const actionArr = [];\r\n  let dataString = data.join('');\r\n  while (dataString.length > 0) {\r\n    const parsedDigit = Number.parseInt(dataString, 10);\r\n    console.log('parsedDigit = ', parsedDigit);\r\n    // const parsedDigit = Number.parseFloat(dataString);\r\n    // if (parsedDigit) digitArr.push(parsedDigit);  ?? надо ли проверку\r\n    digitArr.push(parsedDigit);\r\n    const digitToString =\r\n      parsedDigit === -0 ? parsedDigit.toString() + 1 : parsedDigit.toString();\r\n    const digitLength = digitToString.length;\r\n    console.log('operation :', dataString[digitLength]);\r\n    if (dataString[digitLength] === '-') {\r\n      actionArr.push('+');\r\n      dataString = dataString.substring(digitLength);\r\n    } else {\r\n      dataString[digitLength] && actionArr.push(dataString[digitLength]);\r\n      dataString = dataString.substring(digitLength + 1);\r\n    }\r\n    console.log(\r\n      'parsedDigit = ',\r\n      parsedDigit,\r\n      ' digitToString = ',\r\n      digitToString,\r\n      ' digitLength = ',\r\n      digitLength,\r\n    );\r\n    testZeroDivision(digitArr, actionArr);\r\n  }\r\n  console.log('digitArr = ', digitArr);\r\n  console.log('actionArr = ', actionArr);\r\n\r\n  ACTIONS_TYPE.forEach(type => makeOperation(type, actionArr, digitArr));\r\n  return digitArr[0];\r\n};\r\n\r\nexport default calc;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '../Button/Button';\r\nimport calc from '../../helpers/calc';\r\nimport { KEY_ARRAY } from '../../helpers/constants/constants';\r\nimport styles from './Device.module.css';\r\n\r\nconst initialState = [];\r\nconst initialResult = 0;\r\n\r\nfunction Device() {\r\n  const [state, setState] = useState(initialState);\r\n  const [result, setResult] = useState(initialResult);\r\n  const [isResult, setIsResult] = useState(false);\r\n\r\n  const keyboardHandler = e => {\r\n    const currentKey = e.key;\r\n    if (KEY_ARRAY.includes(currentKey)) {\r\n      symbolHandler(currentKey);\r\n    } else {\r\n      return;\r\n    }\r\n    // console.log('key pressed :', currentKey, ' ', e);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // const keyboardHandler = e => {\r\n    //   const currentKey = e.key;\r\n    //   console.log('key pressed :', currentKey);\r\n    //   symbolHandler(currentKey);\r\n    // };\r\n    // 'keypress' 'keydown'\r\n    document.addEventListener('keypress', keyboardHandler);\r\n    return () => {\r\n      document.removeEventListener('keypress', keyboardHandler);\r\n    };\r\n  }, [keyboardHandler]);\r\n\r\n  const clickHandler = e => {\r\n    const currentSymbol = e.currentTarget.id;\r\n    console.log('click:', currentSymbol);\r\n    symbolHandler(currentSymbol);\r\n  };\r\n\r\n  const symbolHandler = currentSymbol => {\r\n    if (isNaN(currentSymbol)) {\r\n      if (state.includes('ERROR')) {\r\n        setState(initialState);\r\n        setResult(initialResult);\r\n        setIsResult(false);\r\n        return;\r\n      }\r\n      console.log('currentSymbol is not a number!', currentSymbol);\r\n      console.log(\r\n        `state = ${state} state.length = ${state.length}\r\n           state.length - 1 = ${state[state.length - 1]}`,\r\n      );\r\n      setIsResult(false);\r\n      // ------------- ??? ----------\r\n      // const ress = calc(state);\r\n\r\n      let ress;\r\n      try {\r\n        ress = calc(state);\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n\r\n      console.log('!!! NEW result = ', ress);\r\n      // setState(initialState);\r\n      // setResult(result);\r\n      // setState([`${ress}`]);\r\n      ress === undefined ? setResult('ERROR') : setResult(ress);\r\n      // ------------- /??? ----------\r\n      switch (currentSymbol) {\r\n        case '.':\r\n        case '%':\r\n          return;\r\n\r\n        case 'x':\r\n          const newValue = [...state];\r\n          newValue.length = newValue.length - 1;\r\n          setState(state.includes('ERROR') ? [] : newValue);\r\n          return;\r\n\r\n        case 'AC':\r\n          console.log('\"AC\" pressed!!');\r\n          setState(initialState);\r\n          setResult(initialResult);\r\n          setIsResult(false);\r\n          return;\r\n\r\n        case '=':\r\n          if (isNaN(state[state.length - 1])) return;\r\n          console.log('\" =\" pressed!!');\r\n          let res;\r\n          try {\r\n            res = calc(state);\r\n          } catch (error) {\r\n            alert(error.message);\r\n          }\r\n          // let res = calc(state);\r\n          // res = res === Infinity || res === -Infinity ? 'ERROR' : res;\r\n          res = res === undefined ? 'ERROR' : res;\r\n          console.log(` res after '=' : ${res}`);\r\n          setState([`${res}`]);\r\n          setResult(initialResult);\r\n          setIsResult(true);\r\n          return;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      // --- first item ---\r\n      if (state.length === 0 && !isResult) {\r\n        currentSymbol === '-' && setState([currentSymbol]);\r\n        return;\r\n      }\r\n      // --- /first item ---\r\n      // --- first is '-' ---\r\n      if (state.length === 1 && state[0] === '-') {\r\n        return;\r\n      }\r\n      // --- first is '-' ---\r\n      // --- replace last NaN symbol ---\r\n      if (isNaN(state[state.length - 1])) {\r\n        let newValue = [...state];\r\n        console.log('newValue = ', newValue);\r\n        newValue[newValue.length - 1] = currentSymbol;\r\n        console.log('???? newValue = ', newValue);\r\n        setState(newValue);\r\n        // --- /replace last NaN symbol ---\r\n      } else setState(prev => [...prev, currentSymbol]);\r\n    } else {\r\n      console.log('currentSymbol is number', currentSymbol);\r\n      if (isResult) {\r\n        setIsResult(false);\r\n        setState([`${currentSymbol}`]);\r\n      } else {\r\n        // if (currentSymbol === '0') {\r\n        //   console.log('0!!!!!!!!');\r\n        // }\r\n        setState(prev => [...prev, currentSymbol]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.screen}>\r\n        <p className={styles.firstLine}>{state.join('')}</p>\r\n        {!isResult && <p className={styles.secondLine}>{result}</p>}\r\n      </div>\r\n      <div className={styles.keyboard}>\r\n        {KEY_ARRAY.map(item => (\r\n          <Button key={item} value={item} clickHandler={clickHandler} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Device;\r\n","import React from 'react';\nimport Device from './components/Device/Device';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Device />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}